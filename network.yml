Description: CD12352 - Infrastructure as Code Project - Network

Parameters:
  ComponentID:
    Description: ComponentID, using for tagging
    Type: String
  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
  PublicSubnet1Cidr:
    Type: String
    Description: CIDR block for the first public subnet
  PublicSubnet2Cidr:
    Type: String
    Description: CIDR block for the second public subnet
  PrivateSubnet1Cidr:
    Type: String
    Description: CIDR block for the first private subnet
  PrivateSubnet2Cidr:
    Type: String
    Description: CIDR block for the second private subnet

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # IGW + VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Cidr

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2Cidr

  # NGW
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt ElasticIP.AllocationId

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  # one NGW associates 2 private subnets
  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: "Public Route Table"

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

Outputs:
  VpcId:
    Description: "VPC ID"
    Value: !Ref VPC
    Export:
      Name: { "Fn::Sub": "${ComponentID}-VpcId" }

  PrivateSubnet1Id:
    Description: "First private subnet ID"
    Value: !Ref PrivateSubnet1
    Export:
      Name: { "Fn::Sub": "${ComponentID}-PrivateSubnet1Id" }

  PrivateSubnet2Id:
    Description: "Second private subnet ID"
    Value: !Ref PrivateSubnet2
    Export:
      Name: { "Fn::Sub": "${ComponentID}-PrivateSubnet2Id" }

  PublicSubnet1Id:
    Description: "First Public subnet ID"
    Value: !Ref PublicSubnet1
    Export:
      Name: { "Fn::Sub": "${ComponentID}-PublicSubnet1Id" }

  PublicSubnet2Id:
    Description: "Second Public subnet ID"
    Value: !Ref PublicSubnet2
    Export:
      Name: { "Fn::Sub": "${ComponentID}-PublicSubnet2Id" }
